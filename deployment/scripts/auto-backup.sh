#!/bin/bash#!/bin/bash



# Auto Backup Script for Hanaya Shop# Auto Backup Script for Hanaya Shop

# Ch·∫°y t·ª± ƒë·ªông h√†ng ng√†y ƒë·ªÉ backup database, files v√† configs# Ch·∫°y t·ª± ƒë·ªông h√†ng ng√†y ƒë·ªÉ backup database, files v√† configs



# C·∫•u h√¨nh# C·∫•u h√¨nh

BACKUP_DIR="/opt/hanaya-shop/backups"BACKUP_DIR="/opt/hanaya-shop/backups"

PROJECT_DIR="/opt/hanaya-shop"PROJECT_DIR="/opt/hanaya-shop"

DATE=$(date +%Y%m%d_%H%M%S)DATE=$(date +%Y%m%d_%H%M%S)

KEEP_DAYS=30KEEP_DAYS=30



# T·∫°o th∆∞ m·ª•c backup n·∫øu ch∆∞a c√≥# T·∫°o th∆∞ m·ª•c backup n·∫øu ch∆∞a c√≥

mkdir -p $BACKUP_DIR/databasemkdir -p $BACKUP_DIR/database

mkdir -p $BACKUP_DIR/filesmkdir -p $BACKUP_DIR/files

mkdir -p $BACKUP_DIR/configsmkdir -p $BACKUP_DIR/configs



echo "üîÑ B·∫Øt ƒë·∫ßu backup t·ª± ƒë·ªông - $DATE"echo "üîÑ B·∫Øt ƒë·∫ßu backup t·ª± ƒë·ªông - $DATE"



# 1. Backup Database# 1. Backup Database

echo "üì¶ Backup database..."echo "üì¶ Backup database..."

cd $PROJECT_DIRcd $PROJECT_DIR

docker-compose exec -T db mysqldump -u root -phanaya_db_password hanaya_shop | gzip > $BACKUP_DIR/database/hanaya_shop_$DATE.sql.gzdocker-compose exec -T db mysqldump -u root -phanaya_db_password hanaya_shop | gzip > $BACKUP_DIR/database/hanaya_shop_$DATE.sql.gz



if [ $? -eq 0 ]; thenif [ $? -eq 0 ]; then

    echo "‚úÖ Database backup th√†nh c√¥ng"    echo "‚úÖ Database backup th√†nh c√¥ng"

elseelse

    echo "‚ùå Database backup th·∫•t b·∫°i"    echo "‚ùå Database backup th·∫•t b·∫°i"

    exit 1    exit 1

fifi



# 2. Backup Storage Files (images, uploads)# 2. Backup Storage Files (images, uploads)

echo "üìÅ Backup storage files..."echo "üìÅ Backup storage files..."

tar -czf $BACKUP_DIR/files/storage_$DATE.tar.gz -C $PROJECT_DIR storage/app/public/tar -czf $BACKUP_DIR/files/storage_$DATE.tar.gz -C $PROJECT_DIR storage/app/public/



if [ $? -eq 0 ]; thenif [ $? -eq 0 ]; then

    echo "‚úÖ Storage files backup th√†nh c√¥ng"    echo "‚úÖ Storage files backup th√†nh c√¥ng"

elseelse

    echo "‚ùå Storage files backup th·∫•t b·∫°i"    echo "‚ùå Storage files backup th·∫•t b·∫°i"

fifi



# 3. Backup Configs# 3. Backup Configs

echo "‚öôÔ∏è Backup configurations..."echo "‚öôÔ∏è Backup configurations..."

tar -czf $BACKUP_DIR/configs/configs_$DATE.tar.gz \tar -czf $BACKUP_DIR/configs/configs_$DATE.tar.gz \

    -C $PROJECT_DIR \    -C $PROJECT_DIR \

    docker-compose.yml \    docker-compose.yml \

    .env \    .env \

    deployment/ \    deployment/ \

    --exclude=deployment/mysql/data    --exclude=deployment/mysql/data



if [ $? -eq 0 ]; thenif [ $? -eq 0 ]; then

    echo "‚úÖ Config backup th√†nh c√¥ng"    echo "‚úÖ Config backup th√†nh c√¥ng"

elseelse

    echo "‚ùå Config backup th·∫•t b·∫°i"    echo "‚ùå Config backup th·∫•t b·∫°i"

fifi



# 4. D·ªçn d·∫πp backup c≈© (gi·ªØ l·∫°i 30 ng√†y)# 4. D·ªçn d·∫πp backup c≈© (gi·ªØ l·∫°i 30 ng√†y)

echo "üßπ D·ªçn d·∫πp backup c≈©..."echo "üßπ D·ªçn d·∫πp backup c≈©..."



# X√≥a database backup c≈©# X√≥a database backup c≈©

find $BACKUP_DIR/database -name "*.sql.gz" -mtime +$KEEP_DAYS -deletefind $BACKUP_DIR/database -name "*.sql.gz" -mtime +$KEEP_DAYS -delete

# X√≥a file backup c≈©DB_OLD_COUNT=$(find $BACKUP_DIR/database -name "*.sql.gz" -mtime +$KEEP_DAYS | wc -l)

find $BACKUP_DIR/files -name "*.tar.gz" -mtime +$KEEP_DAYS -delete

# X√≥a config backup c≈©# X√≥a file backup c≈©

find $BACKUP_DIR/configs -name "*.tar.gz" -mtime +$KEEP_DAYS -deletefind $BACKUP_DIR/files -name "*.tar.gz" -mtime +$KEEP_DAYS -delete

FILES_OLD_COUNT=$(find $BACKUP_DIR/files -name "*.tar.gz" -mtime +$KEEP_DAYS | wc -l)

echo "üóëÔ∏è ƒê√£ x√≥a backup c≈© h∆°n $KEEP_DAYS ng√†y"

# X√≥a config backup c≈©

# 5. Th·ªëng k√™ backupfind $BACKUP_DIR/configs -name "*.tar.gz" -mtime +$KEEP_DAYS -delete

DB_COUNT=$(ls -1 $BACKUP_DIR/database/*.sql.gz 2>/dev/null | wc -l)CONFIG_OLD_COUNT=$(find $BACKUP_DIR/configs -name "*.tar.gz" -mtime +$KEEP_DAYS | wc -l)

FILES_COUNT=$(ls -1 $BACKUP_DIR/files/*.tar.gz 2>/dev/null | wc -l)

CONFIG_COUNT=$(ls -1 $BACKUP_DIR/configs/*.tar.gz 2>/dev/null | wc -l)echo "üóëÔ∏è ƒê√£ x√≥a backup c≈© h∆°n $KEEP_DAYS ng√†y"



echo ""# 5. Th·ªëng k√™ backup

echo "üìä TH·ªêNG K√ä BACKUP:"DB_COUNT=$(ls -1 $BACKUP_DIR/database/*.sql.gz 2>/dev/null | wc -l)

echo "   Database backups: $DB_COUNT files"FILES_COUNT=$(ls -1 $BACKUP_DIR/files/*.tar.gz 2>/dev/null | wc -l)

echo "   Storage backups:  $FILES_COUNT files"CONFIG_COUNT=$(ls -1 $BACKUP_DIR/configs/*.tar.gz 2>/dev/null | wc -l)

echo "   Config backups:   $CONFIG_COUNT files"

echo ""

# 6. Ki·ªÉm tra dung l∆∞·ª£ngecho "üìä TH·ªêNG K√ä BACKUP:"

BACKUP_SIZE=$(du -sh $BACKUP_DIR | cut -f1)echo "   Database backups: $DB_COUNT files"

echo "   T·ªïng dung l∆∞·ª£ng:  $BACKUP_SIZE"echo "   Storage backups:  $FILES_COUNT files"

echo "   Config backups:   $CONFIG_COUNT files"

# 7. Ki·ªÉm tra disk space

DISK_USAGE=$(df -h $BACKUP_DIR | awk 'NR==2 {print $5}' | sed 's/%//')# 6. Ki·ªÉm tra dung l∆∞·ª£ng

if [ $DISK_USAGE -gt 85 ]; thenBACKUP_SIZE=$(du -sh $BACKUP_DIR | cut -f1)

    echo "‚ö†Ô∏è C·∫¢NH B√ÅO: Disk usage cao ($DISK_USAGE%)"echo "   T·ªïng dung l∆∞·ª£ng:  $BACKUP_SIZE"

fi

# 7. Ki·ªÉm tra disk space

echo ""DISK_USAGE=$(df -h $BACKUP_DIR | awk 'NR==2 {print $5}' | sed 's/%//')

echo "‚úÖ Backup t·ª± ƒë·ªông ho√†n th√†nh - $DATE"if [ $DISK_USAGE -gt 85 ]; then

echo "üìç Backup location: $BACKUP_DIR"    echo "‚ö†Ô∏è C·∫¢NH B√ÅO: Disk usage cao ($DISK_USAGE%)"
fi

echo ""
echo "‚úÖ Backup t·ª± ƒë·ªông ho√†n th√†nh - $DATE"
echo "üìç Backup location: $BACKUP_DIR"